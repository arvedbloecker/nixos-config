input {
    keyboard {
        xkb {
            layout "us,de"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
    }

    touchpad {
        tap
        // dwt
        // dwtp
        // drag-lock
        natural-scroll
        // accel-speed 0.2
        accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        accel-profile "flat"
    }

    // Mouse follows focus
    warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="0%"
}

cursor {
    xcursor-theme "Adwaita"
    xcursor-size 16

    hide-after-inactive-ms 1000
}


environment {
    // Try to run electron apps with wayland
    ELECTRON_OZONE_PLATFORM_HINT "wayland"
    // xwayland-satellite
    DISPLAY ":0"
}

layout {
    gaps 0

    center-focused-column "on-overflow"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    preset-window-heights {
        proportion 0.5
        proportion 1.0
    }

    default-column-width { proportion 0.5; }

    focus-ring {
        off
    }

    border {
        width 2
        inactive-color "#595959"
        active-gradient from="#33ccff" to="#00ff99" angle=45 relative-to="workspace-view"
    }
    struts {
        // left 32
        // right 32
        // top 64
        // bottom 64
    }
}

spawn-at-startup "kanshi"
spawn-at-startup "xwayland-satellite"

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot_from_%Y-%m-%d %H-%M-%S.png"

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    // This app-id regular expression will work for both:
    // - host Firefox (app-id is "firefox")
    // - Flatpak Firefox (app-id is "org.mozilla.firefox")
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Tools
    Mod+E { spawn "ghostty"; }
    Mod+P { spawn "firefox" "--private-window"; }
    Mod+Return { spawn "wofi" "--show" "drun"; }
    // Super+Alt+L { spawn "swaylock"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+Ctrl+C { close-window; }

    // Movement
    Mod+J             { focus-column-or-monitor-left; }
    Mod+L             { focus-window-or-workspace-down; }
    Mod+K             { focus-window-or-workspace-up; }
    Mod+semicolon     { focus-column-or-monitor-right; }
    Mod+Left          { focus-monitor-left; }
    Mod+Down          { focus-monitor-down; }
    Mod+Up            { focus-monitor-up; }
    Mod+Right         { focus-monitor-right; }
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }

    // Moving windows
    Mod+Ctrl+J             { move-column-left-or-to-monitor-left; }
    Mod+Ctrl+L             { move-window-down-or-to-workspace-down; }
    Mod+Ctrl+K             { move-window-up-or-to-workspace-up; }
    Mod+Ctrl+semicolon     { move-column-right-or-to-monitor-right; }
    Mod+Ctrl+Left          { move-column-to-monitor-left; }
    Mod+Ctrl+Down          { move-column-to-monitor-down; }
    Mod+Ctrl+Up            { move-column-to-monitor-up; }
    Mod+Ctrl+Right         { move-column-to-monitor-right; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Ctrl+Space { toggle-overview; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }
    Mod+Tab { focus-workspace-previous; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Fine adjustments
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Toggle between keyboard layouts
    Mod+Space       { switch-layout "next"; }
    Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Ctrl+Alt+Delete { quit; }
    Mod+Shift+P { power-off-monitors; }
}
